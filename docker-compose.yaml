services:
  caddy:
    image: caddy:2
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    networks:
      - nostalgia
    depends_on:
      - web
      - api
    restart: unless-stopped

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=nostalgia
    ports:
      - "5432:5432"
    networks:
      - nostalgia
    volumes:
      - data-volume:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - nostalgia
    restart: unless-stopped

  api:
    image: ${TCR_REGISTRY}/${TCR_NAMESPACE}/${API_REPOSITORY}:${API_TAG:-latest}
    ports:
      - "8080:8080"
      - "9090:9090"
      - "9091:9091"
    networks:
      - nostalgia
    volumes:
      - ./resources:/app/resources
    environment:
      - DB_SOURCE=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/nostalgia?sslmode=disable
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - postgres
      - redis
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]
    restart: unless-stopped

  web:
    image: ${TCR_REGISTRY}/${TCR_NAMESPACE}/${WEB_REPOSITORY}:${WEB_TAG:-latest}
    volumes:
      - ./resources:/usr/share/nginx/resources
    networks:
      - nostalgia
    depends_on:
      - api
    restart: unless-stopped

volumes:
  data-volume:
  caddy_data:
  caddy_config:

networks:
  nostalgia:
    driver: bridge
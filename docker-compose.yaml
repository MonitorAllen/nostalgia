services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - /usr/share/nginx/html:/usr/share/nginx/html
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/share/nginx/html:/usr/share/nginx/html
      - /etc/nginx/certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=nostalgia
    ports:
      - "5432:5432"
    volumes:
      - data-volume:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
      - "9091:9091"
    volumes:
      - ./resources:/app/resources
    environment:
      - DB_SOURCE=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/nostalgia?sslmode=disable
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - postgres
      - redis
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    environment:
      - VIRTUAL_HOST=www.3catz.icu
      - LETSENCRYPT_HOST=www.3catz.icu
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./resources:/usr/share/nginx/resources
    depends_on:
      - api
volumes:
  data-volume:

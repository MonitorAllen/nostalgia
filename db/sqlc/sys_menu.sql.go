// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sys_menu.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listInitSysMenus = `-- name: ListInitSysMenus :many
SELECT
    sm.id,
    sm.name,
    sm.path,
    sm.icon,
    sm.type,
    sm.parent_id
FROM
    sys_menus sm
        LEFT JOIN
    role_permissions rp ON sm.id = rp.menu_id
WHERE
    rp.role_id = $1
  AND sm.is_active = true AND sm.type In (1, 2) ORDER BY sort
`

type ListInitSysMenusRow struct {
	ID       int64       `json:"id"`
	Name     string      `json:"name"`
	Path     string      `json:"path"`
	Icon     string      `json:"icon"`
	Type     int32       `json:"type"`
	ParentID pgtype.Int8 `json:"parent_id"`
}

func (q *Queries) ListInitSysMenus(ctx context.Context, roleID int64) ([]ListInitSysMenusRow, error) {
	rows, err := q.db.Query(ctx, listInitSysMenus, roleID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ListInitSysMenusRow{}
	for rows.Next() {
		var i ListInitSysMenusRow
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Path,
			&i.Icon,
			&i.Type,
			&i.ParentID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
